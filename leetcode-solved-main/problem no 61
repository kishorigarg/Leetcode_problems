/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */

class Solution {
public:
    
    ListNode* getKthNode(ListNode* head, int k) {
        ListNode* temp = head;
        int count = 1;  
        
        while (temp && count < k) {
            temp = temp->next;
            count++;
        }
        
        return temp; 
    }

    ListNode* rotateRight(ListNode* head, int k) {
        if (!head || !head->next || k == 0) {
            return head;  
        }
        ListNode* tail = head;
        int len = 1;
        while (tail->next) {
            tail = tail->next;
            len++;
        }
        k = k % len;
        if (k == 0) return head;  
        tail->next = head;
        ListNode* newLastNode = getKthNode(head, len - k);
        head = newLastNode->next;
        newLastNode->next = NULL;

        return head;
    }
};
